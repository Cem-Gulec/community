% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/a_cellType_gene.R
\name{a_cellType_gene}
\alias{a_cellType_gene}
\title{a_cellType_gene}
\usage{
a_cellType_gene(
  cell_types,
  counts,
  anno_cells,
  threshold_expr = 0.05,
  threshold_nr_active_cells = 0
)
}
\arguments{
\item{cell_types}{character vector: all cell types in the data.}

\item{counts}{numeric dataframe: normalized expression data frame containing ligands and receptors in the rows and cells in the columns. Row names and column names should be defined.}

\item{anno_cells}{dataframe: concatenated data frame of the cell annotation from all samples (rows are cell IDs, columns annotation columns: must contain "cell_ID", "cell_type" and "sample_ID" columns).}

\item{threshold_expr}{numeric: expression threshold below which the expression of the ligand (receptor) is not considered. The default value is 0.05.}

\item{threshold_nr_active_cells}{numeric: threshold for minimal number of active cells, default is 0.}
}
\value{
list of 2:
\itemize{
\item df_frac_above_threshold: numeric \link{0,1} dataframe: rows are genes, columns are cell types. The values are the fraction of cells expressing the ligand(receptor) above the threshold. If a cell type is missing in a sample, all the values for this cell type are set to zero.
\item df_nr_above_threshold: numeric \link{0,Inf} dataframe: rows are genes, columns are cell types. The values are the number of cells expressing the ligand(receptor) above the threshold. If a cell type is missing in a sample, all the values for this cell type are set to zero.
}
}
\description{
calculates the fraction of cells expressing the ligand (receptor) above the threshold in one sample.
}
\examples{
# create a toy example
cell_types <- c("cell_type1","cell_type2")
counts <- data.frame(
       gene1 = c(0,1,0,1,0,1)
     ,gene2 = c(0,0,1,1,0,0)
    ,gene3 = c(0,0,0,0,1,1)
   ,gene4 = c(0,0,0,0,0,0)
   ,gene5 = c(1,1,1,1,1,1)
  ,gene6 = c(0,0,0,0,0,0)
 ,gene7 = c(1,1,1,1,1,1)
,gene8 = c(0,0,0,0,0,0)
)
rownames(counts) <- paste0("gene",1:nrow(counts))
colnames(counts) <- paste0("cell",1:ncol(counts))
anno_cells <- data.frame(
      cell_ID = colnames(counts)
   , cell_type = c("cell_type1","cell_type1","cell_type1","cell_type1","cell_type2","cell_type2")
  , sample_ID = c("sample1","sample1","sample1","sample1","sample1","sample1")
)
# run the function
a_cellType_gene(cell_types = cell_types
               ,counts = counts
              ,anno_cells = anno_cells
             ,threshold_expr = 0.05
           ,threshold_nr_active_cells = 0
)

}
